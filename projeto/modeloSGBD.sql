--ENTIDADE PESSOA
CREATE TABLE PESSOA(
    CPF VARCHAR(16),
    NOME VARCHAR(80) NOT NULL,
    IDADE NUMBER(3) NOT NULL,
    CONSTRAINT PK_PESSOA PRIMARY KEY (CPF)
);

--OUTRA TABELA PARA ATRIBUTO CONTATO(PESSOA)
CREATE TABLE CONTATO_PESSOA(
    CPF VARCHAR(16),
    CONTATO NUMBER(10),
    CONSTRAINT FK_CONT_PESS FOREIGN KEY (CPF) REFERENCES PESSOA(CPF),
    CONSTRAINT PK_CONT_PESS PRIMARY KEY (CPF,CONTATO)
); 

--HERANCA COMPRADOR
CREATE TABLE COMPRADOR(
    CPF VARCHAR(16),
    CONSTRAINT FK_COMPR FOREIGN KEY (CPF) REFERENCES PESSOA(CPF),
    CONSTRAINT PK_COMPR PRIMARY KEY (CPF)
); 

--HERANCA VENDEDOR
CREATE TABLE VENDEDOR(
    CPF VARCHAR(16),
    NUM_VENDAS NUMBER(4) DEFAULT 0,
    CONSTRAINT FK_VEND FOREIGN KEY (CPF) REFERENCES PESSOA(CPF),
    CONSTRAINT PK_VEND PRIMARY KEY (CPF)
); 

--ENTIDADE DE NOME_CARTA
CREATE TABLE NOME_CARTA(
    VERSAO_CARTA VARCHAR(12),
    NOME VARCHAR(80) NOT NULL,
    CONSTRAINT FK_NOME_CARTA PRIMARY KEY (VERSAO_CARTA) 
);

--ENTIDADE CARTA
CREATE TABLE CARTA(
    CPF_PESSOA VARCHAR(16),
    VERSAO VARCHAR (12),
    PRECO NUMBER(20),
    QTD NUMBER (5) DEFAULT 1,
    CONSTRAINT FK_CARTA_CPF FOREIGN KEY (CPF_PESSOA) REFERENCES PESSOA(CPF),
    CONSTRAINT FK_CARTA_VERSAO FOREIGN KEY (VERSAO) REFERENCES NOME_CARTA(VERSAO_CARTA),
    CONSTRAINT PK_CARTA PRIMARY KEY (CPF_PESSOA, VERSAO)
);

--ENTIDADE DE PROMOCAO
CREATE TABLE PROMOCAO(
    CODIGO VARCHAR(8),
    DESCRICAO VARCHAR(200) NOT NULL,
    CONSTRAINT FK_PROMO PRIMARY KEY (CODIGO) 
);

--RELACAO MARCA DUELO
CREATE TABLE MARCA_DUELO(
    DESAFIANTE VARCHAR(16),
    DESAFIADO VARCHAR(16),
    DATA_DIA NUMBER(5),
    DATA_HORA NUMBER(5),
    DATA_MES NUMBER(5),
    DATA_ANO NUMBER(8),
    PREMIO VARCHAR(70),
    CONSTRAINT FK_MARC_DUEL_DESAFIANTE FOREIGN KEY (DESAFIANTE) REFERENCES PESSOA(CPF),
    CONSTRAINT FK_MARC_DUEL_DESAFIADO FOREIGN KEY (DESAFIADO) REFERENCES PESSOA(CPF), 
    CONSTRAINT PK_MARC_DUEL PRIMARY KEY(DESAFIANTE, DESAFIADO, DATA_DIA, DATA_HORA, DATA_MES, DATA_ANO)
);

--ENTIDADE ASSOCIATIVA TRANSACAO
CREATE TABLE TRANSACAO(
    COMPRADOR VARCHAR(16),
    VENDEDOR VARCHAR(16),
    VERSAO VARCHAR (12),
    DATA_TRANSACAO TIMESTAMP,
    CODIGO VARCHAR(4),
    QUANTIDADE NUMBER(10) CHECK (QUANTIDADE > 0),
    CONSTRAINT FK_TRAN_COMPRADOR FOREIGN KEY (COMPRADOR) REFERENCES PESSOA(CPF),
    CONSTRAINT FK_TRAN_CARTA FOREIGN KEY (VENDEDOR, VERSAO) REFERENCES CARTA(CPF_PESSOA, VERSAO),
    CONSTRAINT FK_TRAN_PROMO FOREIGN KEY (CODIGO) REFERENCES PROMOCAO(CODIGO),
    CONSTRAINT PK_TRAN PRIMARY KEY (COMPRADOR, VENDEDOR, VERSAO, DATA_TRANSACAO)
);



-- INSERCCIONES
INSERT INTO PESSOA (CPF,NOME,IDADE) VALUES ('703.705.254-00','MARCELO VICTOR BATISTA',21);
INSERT INTO PESSOA (CPF,NOME,IDADE) VALUES ('000.000.000-00','COSTA VICTOR BATISTA',13);
INSERT INTO PESSOA (CPF,NOME,IDADE) VALUES ('111.222.333-24','LUCAS DOS REIS',24);
INSERT INTO PESSOA (CPF,NOME,IDADE) VALUES ('666.666.666-69','SONIKKU VACINADO DOS REIS',69);

INSERT INTO NOME_CARTA VALUES('BLHR-EN061','ELEMENTAL HERO STRATOS');
INSERT INTO CARTA VALUES ('703.705.254-00','BLHR-EN061',13.50,13);
INSERT INTO CARTA (CPF_PESSOA, VERSAO, PRECO) VALUES ('666.666.666-69','BLHR-EN061',300.30);
INSERT INTO NOME_CARTA VALUES('LBE-EN001','LEFT LEG OF THE FORBIDDEN ONE');
INSERT INTO CARTA VALUES ('111.222.333-24','LBE-EN001',8000,1);
INSERT INTO CARTA VALUES ('111.222.333-24','BLHR-EN061',9.99,123);

--PROJECAO
SELECT * FROM PESSOA ORDER BY NOME;
SELECT * FROM PESSOA ORDER BY NOME DESC;

SELECT * FROM PESSOA P FULL OUTER JOIN CARTA C ON P.CPF = C.CPF_PESSOA;
SELECT * FROM PESSOA P FULL OUTER JOIN CARTA C ON P.CPF = C.CPF_PESSOA ORDER BY P.NOME;

/*
OI
:3
*/
SELECT P.NOME, COUNT(C.CPF_PESSOA)
FROM CARTA C FULL OUTER JOIN PESSOA P ON P.CPF = C.CPF_PESSOA
GROUP BY P.NOME; 

--DALE

SELECT P.NOME AS "NOME DO VENDEDOR", COUNT(C.CPF_PESSOA) AS "CARTAS DIFERENTES CADASTRADAS"
FROM CARTA C INNER JOIN PESSOA P ON P.CPF = C.CPF_PESSOA
GROUP BY P.NOME
HAVING COUNT(C.CPF_PESSOA) >1; 



--DOIDEIRA

SELECT P.NOME AS "NOME DO VENDEDOR", COUNT(C.CPF_PESSOA) AS "CARTAS DIFERENTES CADASTRADAS"
FROM CARTA C INNER JOIN PESSOA P ON P.CPF = C.CPF_PESSOA
WHERE P.NOME LIKE 'L%' OR P.NOME LIKE 'M%'
GROUP BY P.NOME
HAVING COUNT(C.CPF_PESSOA) >1; 

--TRANSACAO
INSERT INTO COMPRADOR VALUES('000.000.000-00');
INSERT INTO VENDEDOR (CPF) VALUES ('703.705.254-00');

INSERT INTO TRANSACAO (COMPRADOR, VENDEDOR, VERSAO, DATA_TRANSACAO,QUANTIDADE) 
VALUES('000.000.000-00','703.705.254-00','BLHR-EN061', current_date, 1);
SELECT * FROM TRANSACAO;
INSERT INTO TRANSACAO (COMPRADOR, VENDEDOR, VERSAO, DATA_TRANSACAO, QUANTIDADE) 
VALUES('000.000.000-00','703.705.254-00','BLHR-EN061', sysdate,2);
SELECT * FROM TRANSACAO;
INSERT INTO TRANSACAO (COMPRADOR, VENDEDOR, VERSAO, DATA_TRANSACAO, QUANTIDADE) 
VALUES('000.000.000-00','703.705.254-00','BLHR-EN061', sysdate-3,2);
SELECT * FROM TRANSACAO;